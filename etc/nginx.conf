#
# WikiProxy's OpenResty configuration
#
# Command:
# $ openresty -p $PWD -c $PWD/nginx.conf
#

daemon      off;
user        www-data;
pcre_jit    on;
pid         /tmp/wikiproxy.pid;
error_log   /var/log/wikiproxy/error.log notice;
#error_log   stderr  debug;

master_process          off;
worker_processes        auto;
worker_rlimit_nofile    65535;

events {
    worker_connections  65535;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # [devel] disable Lua code cache, so that changes will auto apply
    # without reloading Nginx.
    # WARNING: would break 'ngx.ctx' stashing and many init/config/cache code!
    #lua_code_cache off;

    lua_package_path "${prefix}/?.lua;${prefix}/?/init.lua;;";

    lua_shared_dict wikiproxy 10m;

    log_format  main escape=json
                '{"time":"$time_iso8601",'
                '"timestamp":$msec,'
                '"remote_addr":"$remote_addr",'
                '"host":"$host",'
                '"method":"$request_method",'
                '"scheme":"$scheme",'
                '"uri":"$uri",'
                '"args":"$args",'
                '"status":"$status",'
                '"request_time":$request_time,'
                '"request_size":$request_length,'
                '"response_size":$bytes_sent,'
                '"referer":"$http_referer",'
                '"user_agent":"$http_user_agent",'
                '"x_forwarded_for":"$http_x_forwarded_for",'
                '"location":"$sent_http_location",'
                '"protocol":"$server_protocol",'
                '"ssl_protocol":"$ssl_protocol",'
                '"ssl_cipher":"$ssl_cipher"}';

    access_log  /var/log/wikiproxy/access.log  main;
    #access_log  /dev/stdout  main;

    gzip             on;
    gzip_min_length  1000;
    # Reasonable to compress responses that will not be cached on the proxy.
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types       text/plain
                     text/xml
                     text/css
                     font/ttf
                     font/woff
                     font/woff2
                     application/javascript
                     application/x-javascript
                     application/json
                     application/xhtml+xml
                     application/rss+xml
                     application/xml;

    # Maximum number of requests that can be served through one keepalive
    # connection.  Necessary to free per-connection memory allocations.
    keepalive_requests      1000;
    # Time to keep open of keepalive client connections.  Don't set it too
    # large to avoid too many open connections and thus DoS.
    keepalive_timeout       30s;
    client_header_timeout   12s;
    client_body_timeout     12s;
    send_timeout            10s;
    reset_timedout_connection on;

    # Limit client request body size.
    client_max_body_size 1m;

    # Increase the concurrency (default is 128 and may be exceeded by Chrome)
    http2_max_concurrent_streams 256;

    # Override the 'Server' header to avoid leaking server information.
    server_tokens off;
    more_set_headers 'Server: wikiproxy';

    client_body_temp_path   /tmp/wikiproxy/client_body;
    proxy_temp_path         /tmp/wikiproxy/proxy;
    fastcgi_temp_path       /tmp/wikiproxy/fastcgi;
    scgi_temp_path          /tmp/wikiproxy/scgi;
    uwsgi_temp_path         /tmp/wikiproxy/uwsgi;

    init_by_lua_block {
        require("wikiproxy").init()
    }

    init_worker_by_lua_block {
        require("wikiproxy").init_worker()
    }

    server {
        listen       80   reuseport default_server;
        listen  [::]:80   reuseport default_server;
        listen       443  ssl http2 reuseport default_server;
        listen  [::]:443  ssl http2 reuseport default_server;

        server_name  _;

        ssl_certificate     ssl_ecdsa.crt;
        ssl_certificate_key ssl_ecdsa.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;

        # TLSv1.3 ciphersuites and preferences (prefer AES128 for performance).
        ssl_conf_command Ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256;
        # Prioritize ChaCha ciphers when the client has a ChaCha20 cipher
        # at the top of its preference list, helping mobile clients.
        ssl_conf_command Options PrioritizeChaCha;

        # NOTE: Let server choose the cipher since some old (weaker) ciphers
        #       are still supported for compatibility.
        ssl_prefer_server_ciphers on;

        ssl_session_cache shared:SSL:20m; # ~4000 sessions per MB
        ssl_session_timeout 1d;
        # Session tickets have fatal flaws in TLS<=1.2
        ssl_session_tickets off;

        location / {
            if ( $request_method = CONNECT ) {
                return 405;
            }

            access_by_lua_block {
                require("wikiproxy").access_phase()
            }
            content_by_lua_block {
                require("wikiproxy").content_phase()
            }
        }
    }
}
